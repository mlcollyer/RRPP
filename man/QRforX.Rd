% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RRPP.utils.r
\name{QRforX}
\alias{QRforX}
\title{QR decomposition of linear model design matrices}
\usage{
QRforX(X, ...)
}
\arguments{
\item{X}{A linear model design matrix, but can be any object coercible to matrix.}

\item{...}{Further arguments passed to base::qr.}
}
\value{
An object of class \code{QR} is a list containing the 
following:
\item{Q}{The Q matrix.}
\item{R}{The R matrix.}
\item{X}{The X matrix, which could be changes from dense to sparse,
or vice versa, and redundant columns removed.}
\item{rank}{The rank of the X matrix.}
\item{fix}{Logical value for whether redundant columns were removed
form X.  TRUE means columns were removed.}
\item{S4}{Logical value for whether Q, R, and X are S4 class objects.}
}
\description{
This function performs a QR decomposition (factorization) on a linear 
model design matrix (X) and returns useful results for subsequent analysis.
This is intended as an internal function but can be used externally.  Because
base::qr and Matrix::qr have different options for QR algorithms, this
function assures that results are consistent for other RRPP function use, 
whether X is a dense or sparse matrix.
}
\examples{
data(Pupfish)
fit <- lm.rrpp(coords ~ Pop, data = Pupfish, print.progress = FALSE)
QR <- QRforX(model.matrix(fit))
QR$Q
QR$R
QR$rank
QR$S4

## Not run, but one could get base::qr and Matrix::qr results as

# base::qr(as.matrix(QR$X))
# Matrix::qr(QR$X)
}
\author{
Michael Collyer
}
\keyword{utilities}
